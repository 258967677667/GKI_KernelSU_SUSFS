name: Build Android 13 5.15 GKI Kernels

on:
  workflow_call:  # This allows this workflow to be called from another workflow
    inputs:
      lto_type:
        required: true
        type: string
      next_branch:
        required: true
        type: string
      next_branch_other:
        required: false
        type: string
      runner:
        required: true
        type: string
  
jobs:
  build-kernel-a13-5-15-kernelsu-susfs:
    runs-on: ${{ inputs.runner }}
    strategy:
      matrix:
        include:
          - android_version: "android13"
            kernel_version: "5.15"
            sub_level: "94"
            os_patch_level: "2023-05"
          - android_version: "android13"
            kernel_version: "5.15"
            sub_level: "123"
            os_patch_level: "2023-11"
          - android_version: "android13"
            kernel_version: "5.15"
            sub_level: "137"
            os_patch_level: "2024-01"
          - android_version: "android13"
            kernel_version: "5.15"
            sub_level: "144"
            os_patch_level: "2024-03"
          - android_version: "android13"
            kernel_version: "5.15"
            sub_level: "148"
            os_patch_level: "2024-05"
          - android_version: "android13"
            kernel_version: "5.15"
            sub_level: "149"
            os_patch_level: "2024-07"
          - android_version: "android13"
            kernel_version: "5.15"
            sub_level: "151"
            os_patch_level: "2024-08"
          - android_version: "android13"
            kernel_version: "5.15"
            sub_level: "167"
            os_patch_level: "2024-11"
          #- android_version: "android13"
          #  kernel_version: "5.15"
          #  sub_level: "X"
          #  os_patch_level: "lts"

    steps:
      - name: Maximize build space
        if: ${{ inputs.runner == 'ubuntu-22.04' }}
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          swap-size-mb: 8192
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'

      - name: Clear GitHub Workspace
        if: ${{ inputs.runner == 'ubuntu-22.04-local' }}
        run: |
          echo "Clearing the GitHub workspace..."
          rm -rf $GITHUB_WORKSPACE/*
          echo "Workspace cleared."

      - name: Set CONFIG Environment Variable
        run: |
          # Set CONFIG dynamically based on matrix values
          CONFIG="${{ matrix.android_version }}-${{ matrix.kernel_version }}-${{ matrix.sub_level }}"
          
          # Set CONFIG as an environment variable for future steps
          echo "CONFIG=$CONFIG" >> $GITHUB_ENV
          
          echo "CONFIG set to: $CONFIG"

      - name: Download prebuilt toolchain
        run: |
          AOSP_MIRROR=https://android.googlesource.com
          BRANCH=main-kernel-build-2024
          git clone $AOSP_MIRROR/kernel/prebuilts/build-tools -b $BRANCH --depth 1 kernel-build-tools
          git clone $AOSP_MIRROR/platform/system/tools/mkbootimg -b $BRANCH --depth 1 mkbootimg

          echo "AVBTOOL=$GITHUB_WORKSPACE/kernel-build-tools/linux-x86/bin/avbtool" >> $GITHUB_ENV
          echo "MKBOOTIMG=$GITHUB_WORKSPACE/mkbootimg/mkbootimg.py" >> $GITHUB_ENV
          echo "UNPACK_BOOTIMG=$GITHUB_WORKSPACE/mkbootimg/unpack_bootimg.py" >> $GITHUB_ENV

      - name: Set boot sign key
        env:
          BOOT_SIGN_KEY: ${{ secrets.BOOT_SIGN_KEY }}
        run: |
          if [ ! -z "$BOOT_SIGN_KEY" ]; then
            echo "$BOOT_SIGN_KEY" > ./kernel-build-tools/linux-x86/share/avb/testkey_rsa2048.pem
            echo "BOOT_SIGN_KEY_PATH=$GITHUB_WORKSPACE/kernel-build-tools/linux-x86/share/avb/testkey_rsa2048.pem" >> $GITHUB_ENV
          else
            echo "BOOT_SIGN_KEY is not set. Exiting..."
            exit 1
          fi
          
      - name: Install Repo
        run: |
          # Install dependencies
          mkdir -p ./git-repo
          curl https://storage.googleapis.com/git-repo-downloads/repo > ./git-repo/repo
          chmod a+rx ./git-repo/repo
          echo "REPO=$GITHUB_WORKSPACE/./git-repo/repo" >> $GITHUB_ENV

      - name: Clone AnyKernel3 and Other Dependencies
        run: |
          echo "Cloning AnyKernel3 and other dependencies..."
    
          # Define the branch names using the matrix values
          ANYKERNEL_BRANCH="${{ matrix.android_version }}-${{ matrix.kernel_version }}"
          SUSFS_BRANCH="gki-${{ matrix.android_version }}-${{ matrix.kernel_version }}"

          # Debug print the branches
          echo "Using branch for AnyKernel3: $ANYKERNEL_BRANCH"
          echo "Using branch for SUSFS: $SUSFS_BRANCH"

          # Clone repositories using the branch names
          git clone https://github.com/TheWildJames/AnyKernel3.git -b "$ANYKERNEL_BRANCH"
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b "$SUSFS_BRANC
